/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.practicaestructura.fronted;

import com.mycompany.practicaestructura.objets.Report;
import com.mycompany.practicaestructura.reader.ReaderBet;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author joel
 */
public class MainForm extends javax.swing.JFrame {

    private int numberBets = 0;
    private String[] bets;
    private File file;
    private String[] fileBets;
    private String[] manuallyBets;
    private ArrayList<Integer> orderHorses;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.numberBetsLabel.setText("Numero de Apuestas: " + numberBets);
        orderHorses = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderHorsesDialog = new javax.swing.JDialog();
        h1CB = new javax.swing.JCheckBox();
        h2CB = new javax.swing.JCheckBox();
        h3CB = new javax.swing.JCheckBox();
        h4CB = new javax.swing.JCheckBox();
        h5CB = new javax.swing.JCheckBox();
        h6CB = new javax.swing.JCheckBox();
        h7CB = new javax.swing.JCheckBox();
        h8CB = new javax.swing.JCheckBox();
        h9CB = new javax.swing.JCheckBox();
        h10CB = new javax.swing.JCheckBox();
        startButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTA = new javax.swing.JTextArea();
        orderLabel = new javax.swing.JLabel();
        inicioLabel = new javax.swing.JLabel();
        uploadButton = new javax.swing.JButton();
        fileLabel = new javax.swing.JLabel();
        startRaceButton = new javax.swing.JButton();
        betField = new javax.swing.JTextField();
        addBetButton = new javax.swing.JButton();
        numberBetsLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        orderHorsesDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        orderHorsesDialog.setAlwaysOnTop(true);
        orderHorsesDialog.setMinimumSize(new java.awt.Dimension(720, 260));

        h1CB.setText("Caballo#1");
        h1CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h1CBActionPerformed(evt);
            }
        });

        h2CB.setText("Caballo#2");
        h2CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h2CBActionPerformed(evt);
            }
        });

        h3CB.setText("Caballo#3");
        h3CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h3CBActionPerformed(evt);
            }
        });

        h4CB.setText("Caballo#4");
        h4CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h4CBActionPerformed(evt);
            }
        });

        h5CB.setText("Caballo#5");
        h5CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h5CBActionPerformed(evt);
            }
        });

        h6CB.setText("Caballo#6");
        h6CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h6CBActionPerformed(evt);
            }
        });

        h7CB.setText("Caballo#7");
        h7CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h7CBActionPerformed(evt);
            }
        });

        h8CB.setText("Caballo#8");
        h8CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h8CBActionPerformed(evt);
            }
        });

        h9CB.setText("Caballo#9");
        h9CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h9CBActionPerformed(evt);
            }
        });

        h10CB.setText("Caballo#10");
        h10CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h10CBActionPerformed(evt);
            }
        });

        startButton.setText("Iniciar Carrera");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        orderTA.setEditable(false);
        orderTA.setColumns(20);
        orderTA.setRows(5);
        jScrollPane1.setViewportView(orderTA);

        orderLabel.setText("Pon el orden de los caballos");

        javax.swing.GroupLayout orderHorsesDialogLayout = new javax.swing.GroupLayout(orderHorsesDialog.getContentPane());
        orderHorsesDialog.getContentPane().setLayout(orderHorsesDialogLayout);
        orderHorsesDialogLayout.setHorizontalGroup(
            orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                .addGroup(orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                                .addComponent(h1CB)
                                .addGap(26, 26, 26)
                                .addComponent(h2CB))
                            .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                                .addComponent(h6CB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(h7CB)))
                        .addGap(18, 18, 18)
                        .addGroup(orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                                        .addComponent(h3CB)
                                        .addGap(18, 18, 18)
                                        .addComponent(h4CB))
                                    .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                                        .addComponent(h8CB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(h9CB)))
                                .addGap(18, 18, 18)
                                .addGroup(orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(h5CB)
                                    .addComponent(h10CB)))
                            .addComponent(startButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(orderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        orderHorsesDialogLayout.setVerticalGroup(
            orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(orderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(orderHorsesDialogLayout.createSequentialGroup()
                        .addGroup(orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(h1CB)
                            .addComponent(h2CB)
                            .addComponent(h5CB)
                            .addComponent(h4CB)
                            .addComponent(h3CB))
                        .addGap(40, 40, 40)
                        .addGroup(orderHorsesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(h8CB)
                            .addComponent(h9CB)
                            .addComponent(h7CB)
                            .addComponent(h6CB)
                            .addComponent(h10CB))
                        .addGap(41, 41, 41)
                        .addComponent(startButton)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inicioLabel.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        inicioLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inicioLabel.setText("Carrera de Caballos \"Residente\"");

        uploadButton.setText("Subir Archivo");
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        fileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fileLabel.setText("Archivo: ");

        startRaceButton.setText("Iniciar Carrera");
        startRaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startRaceButtonActionPerformed(evt);
            }
        });

        betField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                betFieldActionPerformed(evt);
            }
        });

        addBetButton.setText("Agregar apuesta");
        addBetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBetButtonActionPerformed(evt);
            }
        });

        numberBetsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numberBetsLabel.setText("Numero de Apuestas Manuales:");

        jLabel1.setText("Formato: nombre, monto, caballo#1, caballo#2, ...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(startRaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(inicioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(numberBetsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(uploadButton, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(fileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addBetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(betField, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(71, 71, 71))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(inicioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(betField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(numberBetsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(startRaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Aca se agregan las apuestas por el archivo de entrada
     * @param evt 
     */
    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileHidingEnabled(false);
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
            fileLabel.setText("Archivo: " + fileChooser.getSelectedFile().getName());
            //Convert file to text
            String line;
            try {
                BufferedReader br = new BufferedReader(new FileReader(file));
                while ((line = br.readLine()) != null) {
                    if (fileBets ==null) {
                        fileBets = new String[1];
                        fileBets[0] = line;
                    }
                    else {
                        agregarApuestaAutomatica(line);
                    }
                }
            } catch (IOException e) {
                e.printStackTrace(System.out);
            }
        }
    }//GEN-LAST:event_uploadButtonActionPerformed

    private void startRaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startRaceButtonActionPerformed
        if (fileBets.equals("") && manuallyBets.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingresa el archivo de carga o ingresa al menos una apuesta manual");
        } else {
            orderHorsesDialog.setVisible(true);
            orderHorsesDialog.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_startRaceButtonActionPerformed

    private void betFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_betFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_betFieldActionPerformed

    private void h5CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h5CBActionPerformed
        //Agregar al caballo 5 al listado
        if (h5CB.isSelected()) {
            orderHorses.add(5);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(5));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h5CBActionPerformed

    private void h1CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h1CBActionPerformed
        //Agregar al caballo 1 al listado
        if (h1CB.isSelected()) {
            orderHorses.add(1);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(1));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h1CBActionPerformed

    private void h4CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h4CBActionPerformed
        //Agregar al caballo 4 al listado
        if (h4CB.isSelected()) {
            orderHorses.add(4);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(4));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h4CBActionPerformed

    private void h2CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h2CBActionPerformed
        //Agregar al caballo 2 al listado
        if (h2CB.isSelected()) {
            orderHorses.add(2);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(2));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h2CBActionPerformed

    private void h7CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h7CBActionPerformed
        //Agregar al caballo 7 al listado
        if (h7CB.isSelected()) {
            orderHorses.add(7);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(7));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h7CBActionPerformed

    private void h3CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h3CBActionPerformed
        //Agregar al caballo 3 al listado
        if (h3CB.isSelected()) {
            orderHorses.add(3);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(3));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h3CBActionPerformed

    private void h6CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h6CBActionPerformed
        //Agregar al caballo 6 al listado
        if (h6CB.isSelected()) {
            orderHorses.add(6);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(6));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h6CBActionPerformed

    private void h10CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h10CBActionPerformed
        // TODO add your handling code here:
        if (h10CB.isSelected()) {
            orderHorses.add(10);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(10));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h10CBActionPerformed

    private void h8CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h8CBActionPerformed
        // TODO add your handling code here:
        if (h8CB.isSelected()) {
            orderHorses.add(8);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(8));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h8CBActionPerformed

    private void h9CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h9CBActionPerformed
        // TODO add your handling code here:
        if (h9CB.isSelected()) {
            orderHorses.add(9);
        } else {
            try {
                orderHorses.remove(orderHorses.indexOf(9));
            } catch (Exception ex) {
                System.out.println("No se ha encontrado el elemento");
            }
        }
        imprimirOrden();
    }//GEN-LAST:event_h9CBActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // aca se inicia la carrera
        if (orderHorses.size() < 10) {
            JOptionPane.showMessageDialog(null, "Selecciona todas las casillas");
        } else {
            orderHorsesDialog.setVisible(false);
            //Calcular el tamaño del arreglo total
            int sizeBets = 0;
            if (fileBets != null) {
                sizeBets = fileBets.length;
            }
            if (manuallyBets != null) {
                sizeBets += manuallyBets.length;
            }
            bets = new String[sizeBets];
            
            if (fileBets == null && manuallyBets!=null) {
                bets = manuallyBets;
            } else if (fileBets != null && manuallyBets==null) {
                bets = fileBets;
            } else {
                System.arraycopy(fileBets, 0, bets, 0, fileBets.length);  
                System.arraycopy(manuallyBets, 0, bets, fileBets.length, manuallyBets.length);  
            }      
            
            //Iniciar la verificacion de las apuestas
            ReaderBet readerBet = new ReaderBet(bets, orderHorses);
            readerBet.analizarApuestas();
            Report reportVerApuestas = new Report("Verificacion Apuestas", readerBet.getPromedioTiempoDuplicacion(), readerBet.getPromedioPasosDuplicacion(), readerBet.getCantidadMayorDuplicacion(), readerBet.getCantidadMenorDuplicacion());

            //Mostrar resultados
            
            this.setVisible(false);
            ReportsForm reportsForm = new ReportsForm(this);
            reportsForm.setVerificacionDupli(reportVerApuestas);
            reportsForm.setErroresApuestas(readerBet.getErroresApuestas());
            reportsForm.setLocationRelativeTo(null);
            reportsForm.setVisible(true);
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void addBetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBetButtonActionPerformed
        String bet = betField.getText();
        if (!bet.isBlank() || !bet.isEmpty()) {
            if (manuallyBets == null) {
                manuallyBets = new String[1];
                manuallyBets[0] = bet;
            } else {
                agregarApuestaManual(bet);
            }
            numberBets++;
            this.numberBetsLabel.setText("Numero de Apuestas: " + numberBets);
            this.betField.setText("");
        }
    }//GEN-LAST:event_addBetButtonActionPerformed

    private void imprimirOrden() {
        orderTA.repaint();
        orderTA.setText("");
        for (int i = 0; i < orderHorses.size(); i++) {
            try {
                orderTA.append(String.valueOf(orderHorses.get(i)) + "\n");
            } catch (Exception ex) {
                ex.printStackTrace(System.out);
            }

        }
    }

//    public Integer[] eliminarCaballo(int numero) {
//        int tamañoActual = 0;
//        //Este metodo se encarga de eliminar al jugador
//        for (int i = 0; i < orderHorses.length; i++) {
//            if (orderHorses[i] == numero) {
//                orderHorses[i] = null;
//            } else {
//                tamañoActual++;
//            }
//        }
//
//        Integer[] sinUnCaballo = new Integer[tamañoActual - 1];
//        //Con este metodo se redimensiona
//        for (int i = 0; i < orderHorses.length; i++) {
//            if (orderHorses[i] != null) {
//                sinUnCaballo = agregarNumeroCaballo(sinUnCaballo, orderHorses[i]);
//            }
//        }
//    }
//
    private void agregarApuestaManual(String apuesta) {
        manuallyBets = aumentarTamaño(manuallyBets);
        for (int i = 0; i < manuallyBets.length; i++) {
            if (manuallyBets[i] == null) {
                manuallyBets[i] = apuesta;
                break;
            }
        }
    }
    
    private void agregarApuestaAutomatica(String apuesta){
        fileBets = aumentarTamaño(fileBets);
        for (int i = 0; i < fileBets.length; i++) {
            if (fileBets[i] == null) {
                fileBets[i] = apuesta;
                break;
            }
        }
    }
    
    private String[] aumentarTamaño(String[] arregloAntiguo){
        String[] nuevoArreglo = new String[arregloAntiguo.length+1];
        for (int i = 0; i < arregloAntiguo.length; i++) {
            nuevoArreglo[i] = arregloAntiguo[i];
        }
        return nuevoArreglo;
    }
    
    public void restart(){
        file = null;
        numberBets = 0;
        bets = null;
        fileBets = null;
        manuallyBets = null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBetButton;
    private javax.swing.JTextField betField;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JCheckBox h10CB;
    private javax.swing.JCheckBox h1CB;
    private javax.swing.JCheckBox h2CB;
    private javax.swing.JCheckBox h3CB;
    private javax.swing.JCheckBox h4CB;
    private javax.swing.JCheckBox h5CB;
    private javax.swing.JCheckBox h6CB;
    private javax.swing.JCheckBox h7CB;
    private javax.swing.JCheckBox h8CB;
    private javax.swing.JCheckBox h9CB;
    private javax.swing.JLabel inicioLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel numberBetsLabel;
    private javax.swing.JDialog orderHorsesDialog;
    private javax.swing.JLabel orderLabel;
    private javax.swing.JTextArea orderTA;
    private javax.swing.JButton startButton;
    private javax.swing.JButton startRaceButton;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
